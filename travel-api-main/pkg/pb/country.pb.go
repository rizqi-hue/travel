// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.20.2
// source: pkg/pb/country.proto

package pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Alpha2                 string `protobuf:"bytes,3,opt,name=Alpha2,proto3" json:"Alpha2,omitempty"`
	Alpha3                 string `protobuf:"bytes,4,opt,name=Alpha3,proto3" json:"Alpha3,omitempty"`
	CountryCode            string `protobuf:"bytes,5,opt,name=CountryCode,proto3" json:"CountryCode,omitempty"`
	Iso31662               string `protobuf:"bytes,6,opt,name=Iso31662,proto3" json:"Iso31662,omitempty"`
	Region                 string `protobuf:"bytes,7,opt,name=Region,proto3" json:"Region,omitempty"`
	SubRegion              string `protobuf:"bytes,8,opt,name=SubRegion,proto3" json:"SubRegion,omitempty"`
	IntermediateRegion     string `protobuf:"bytes,9,opt,name=IntermediateRegion,proto3" json:"IntermediateRegion,omitempty"`
	RegionCode             string `protobuf:"bytes,10,opt,name=RegionCode,proto3" json:"RegionCode,omitempty"`
	SubRegionCode          string `protobuf:"bytes,11,opt,name=SubRegionCode,proto3" json:"SubRegionCode,omitempty"`
	IntermediateRegionCode string `protobuf:"bytes,12,opt,name=IntermediateRegionCode,proto3" json:"IntermediateRegionCode,omitempty"`
	CreatedAt              string `protobuf:"bytes,13,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	UpdatedAt              string `protobuf:"bytes,14,opt,name=UpdatedAt,proto3" json:"UpdatedAt,omitempty"`
	Deleted                string `protobuf:"bytes,15,opt,name=Deleted,proto3" json:"Deleted,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{0}
}

func (x *Country) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Country) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Country) GetAlpha2() string {
	if x != nil {
		return x.Alpha2
	}
	return ""
}

func (x *Country) GetAlpha3() string {
	if x != nil {
		return x.Alpha3
	}
	return ""
}

func (x *Country) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

func (x *Country) GetIso31662() string {
	if x != nil {
		return x.Iso31662
	}
	return ""
}

func (x *Country) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *Country) GetSubRegion() string {
	if x != nil {
		return x.SubRegion
	}
	return ""
}

func (x *Country) GetIntermediateRegion() string {
	if x != nil {
		return x.IntermediateRegion
	}
	return ""
}

func (x *Country) GetRegionCode() string {
	if x != nil {
		return x.RegionCode
	}
	return ""
}

func (x *Country) GetSubRegionCode() string {
	if x != nil {
		return x.SubRegionCode
	}
	return ""
}

func (x *Country) GetIntermediateRegionCode() string {
	if x != nil {
		return x.IntermediateRegionCode
	}
	return ""
}

func (x *Country) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *Country) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *Country) GetDeleted() string {
	if x != nil {
		return x.Deleted
	}
	return ""
}

type CountryHeader struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page  int64                `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Size  int64                `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	Query *CountryHeader_Query `protobuf:"bytes,3,opt,name=query,proto3" json:"query,omitempty"`
	Sort  *CountryHeader_Sort  `protobuf:"bytes,4,opt,name=sort,proto3" json:"sort,omitempty"`
}

func (x *CountryHeader) Reset() {
	*x = CountryHeader{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryHeader) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryHeader) ProtoMessage() {}

func (x *CountryHeader) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryHeader.ProtoReflect.Descriptor instead.
func (*CountryHeader) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{1}
}

func (x *CountryHeader) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CountryHeader) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CountryHeader) GetQuery() *CountryHeader_Query {
	if x != nil {
		return x.Query
	}
	return nil
}

func (x *CountryHeader) GetSort() *CountryHeader_Sort {
	if x != nil {
		return x.Sort
	}
	return nil
}

// Get
type GetCountryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GET_COUNTRY *GetCountryRequestData `protobuf:"bytes,1,opt,name=GET_COUNTRY,json=GETCOUNTRY,proto3" json:"GET_COUNTRY,omitempty"`
}

func (x *GetCountryRequest) Reset() {
	*x = GetCountryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryRequest) ProtoMessage() {}

func (x *GetCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryRequest.ProtoReflect.Descriptor instead.
func (*GetCountryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{2}
}

func (x *GetCountryRequest) GetGET_COUNTRY() *GetCountryRequestData {
	if x != nil {
		return x.GET_COUNTRY
	}
	return nil
}

type GetCountryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GET_COUNTRY *GetCountryResponseData `protobuf:"bytes,1,opt,name=GET_COUNTRY,json=GETCOUNTRY,proto3" json:"GET_COUNTRY,omitempty"`
}

func (x *GetCountryResponse) Reset() {
	*x = GetCountryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryResponse) ProtoMessage() {}

func (x *GetCountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryResponse.ProtoReflect.Descriptor instead.
func (*GetCountryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{3}
}

func (x *GetCountryResponse) GetGET_COUNTRY() *GetCountryResponseData {
	if x != nil {
		return x.GET_COUNTRY
	}
	return nil
}

// Gets
type GetsCountryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GETS_COUNTRY *CountryHeader `protobuf:"bytes,1,opt,name=GETS_COUNTRY,json=GETSCOUNTRY,proto3" json:"GETS_COUNTRY,omitempty"`
}

func (x *GetsCountryRequest) Reset() {
	*x = GetsCountryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCountryRequest) ProtoMessage() {}

func (x *GetsCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCountryRequest.ProtoReflect.Descriptor instead.
func (*GetsCountryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{4}
}

func (x *GetsCountryRequest) GetGETS_COUNTRY() *CountryHeader {
	if x != nil {
		return x.GETS_COUNTRY
	}
	return nil
}

type GetsCountryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GETS_COUNTRY *GetsCountryResponseData `protobuf:"bytes,1,opt,name=GETS_COUNTRY,json=GETSCOUNTRY,proto3" json:"GETS_COUNTRY,omitempty"`
}

func (x *GetsCountryResponse) Reset() {
	*x = GetsCountryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCountryResponse) ProtoMessage() {}

func (x *GetsCountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCountryResponse.ProtoReflect.Descriptor instead.
func (*GetsCountryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{5}
}

func (x *GetsCountryResponse) GetGETS_COUNTRY() *GetsCountryResponseData {
	if x != nil {
		return x.GETS_COUNTRY
	}
	return nil
}

// Create
type CreateCountryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CREATE_COUNTRY *Country `protobuf:"bytes,1,opt,name=CREATE_COUNTRY,json=CREATECOUNTRY,proto3" json:"CREATE_COUNTRY,omitempty"`
}

func (x *CreateCountryRequest) Reset() {
	*x = CreateCountryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCountryRequest) ProtoMessage() {}

func (x *CreateCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCountryRequest.ProtoReflect.Descriptor instead.
func (*CreateCountryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCountryRequest) GetCREATE_COUNTRY() *Country {
	if x != nil {
		return x.CREATE_COUNTRY
	}
	return nil
}

type CreateCountryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CREATE_COUNTRY *CreateCountryResponseData `protobuf:"bytes,1,opt,name=CREATE_COUNTRY,json=CREATECOUNTRY,proto3" json:"CREATE_COUNTRY,omitempty"`
}

func (x *CreateCountryResponse) Reset() {
	*x = CreateCountryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCountryResponse) ProtoMessage() {}

func (x *CreateCountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCountryResponse.ProtoReflect.Descriptor instead.
func (*CreateCountryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{7}
}

func (x *CreateCountryResponse) GetCREATE_COUNTRY() *CreateCountryResponseData {
	if x != nil {
		return x.CREATE_COUNTRY
	}
	return nil
}

// Update
type UpdateCountryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UPDATE_COUNTRY *Country `protobuf:"bytes,1,opt,name=UPDATE_COUNTRY,json=UPDATECOUNTRY,proto3" json:"UPDATE_COUNTRY,omitempty"`
}

func (x *UpdateCountryRequest) Reset() {
	*x = UpdateCountryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountryRequest) ProtoMessage() {}

func (x *UpdateCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountryRequest.ProtoReflect.Descriptor instead.
func (*UpdateCountryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateCountryRequest) GetUPDATE_COUNTRY() *Country {
	if x != nil {
		return x.UPDATE_COUNTRY
	}
	return nil
}

type UpdateCountryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UPDATE_COUNTRY *UpdateCountryResponseData `protobuf:"bytes,1,opt,name=UPDATE_COUNTRY,json=UPDATECOUNTRY,proto3" json:"UPDATE_COUNTRY,omitempty"`
}

func (x *UpdateCountryResponse) Reset() {
	*x = UpdateCountryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountryResponse) ProtoMessage() {}

func (x *UpdateCountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountryResponse.ProtoReflect.Descriptor instead.
func (*UpdateCountryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{9}
}

func (x *UpdateCountryResponse) GetUPDATE_COUNTRY() *UpdateCountryResponseData {
	if x != nil {
		return x.UPDATE_COUNTRY
	}
	return nil
}

// Delete
type DeleteCountryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DELETE_COUNTRY *DeleteCountryRequestData `protobuf:"bytes,1,opt,name=DELETE_COUNTRY,json=DELETECOUNTRY,proto3" json:"DELETE_COUNTRY,omitempty"`
}

func (x *DeleteCountryRequest) Reset() {
	*x = DeleteCountryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCountryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCountryRequest) ProtoMessage() {}

func (x *DeleteCountryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCountryRequest.ProtoReflect.Descriptor instead.
func (*DeleteCountryRequest) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{10}
}

func (x *DeleteCountryRequest) GetDELETE_COUNTRY() *DeleteCountryRequestData {
	if x != nil {
		return x.DELETE_COUNTRY
	}
	return nil
}

type DeleteCountryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DELETE_COUNTRY *DeleteCountryResponseData `protobuf:"bytes,1,opt,name=DELETE_COUNTRY,json=DELETECOUNTRY,proto3" json:"DELETE_COUNTRY,omitempty"`
}

func (x *DeleteCountryResponse) Reset() {
	*x = DeleteCountryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCountryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCountryResponse) ProtoMessage() {}

func (x *DeleteCountryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCountryResponse.ProtoReflect.Descriptor instead.
func (*DeleteCountryResponse) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{11}
}

func (x *DeleteCountryResponse) GetDELETE_COUNTRY() *DeleteCountryResponseData {
	if x != nil {
		return x.DELETE_COUNTRY
	}
	return nil
}

type CountryHeader_Query struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Alpha2 string `protobuf:"bytes,3,opt,name=Alpha2,proto3" json:"Alpha2,omitempty"`
	Alpha3 string `protobuf:"bytes,4,opt,name=Alpha3,proto3" json:"Alpha3,omitempty"`
}

func (x *CountryHeader_Query) Reset() {
	*x = CountryHeader_Query{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryHeader_Query) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryHeader_Query) ProtoMessage() {}

func (x *CountryHeader_Query) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryHeader_Query.ProtoReflect.Descriptor instead.
func (*CountryHeader_Query) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CountryHeader_Query) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CountryHeader_Query) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountryHeader_Query) GetAlpha2() string {
	if x != nil {
		return x.Alpha2
	}
	return ""
}

func (x *CountryHeader_Query) GetAlpha3() string {
	if x != nil {
		return x.Alpha3
	}
	return ""
}

type CountryHeader_Sort struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name   string `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Alpha2 string `protobuf:"bytes,3,opt,name=Alpha2,proto3" json:"Alpha2,omitempty"`
	Alpha3 string `protobuf:"bytes,4,opt,name=Alpha3,proto3" json:"Alpha3,omitempty"`
}

func (x *CountryHeader_Sort) Reset() {
	*x = CountryHeader_Sort{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CountryHeader_Sort) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CountryHeader_Sort) ProtoMessage() {}

func (x *CountryHeader_Sort) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CountryHeader_Sort.ProtoReflect.Descriptor instead.
func (*CountryHeader_Sort) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{1, 1}
}

func (x *CountryHeader_Sort) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CountryHeader_Sort) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CountryHeader_Sort) GetAlpha2() string {
	if x != nil {
		return x.Alpha2
	}
	return ""
}

func (x *CountryHeader_Sort) GetAlpha3() string {
	if x != nil {
		return x.Alpha3
	}
	return ""
}

type GetCountryRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Country string `protobuf:"bytes,2,opt,name=Country,proto3" json:"Country,omitempty"`
}

func (x *GetCountryRequestData) Reset() {
	*x = GetCountryRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryRequestData) ProtoMessage() {}

func (x *GetCountryRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryRequestData.ProtoReflect.Descriptor instead.
func (*GetCountryRequestData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{2, 0}
}

func (x *GetCountryRequestData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetCountryRequestData) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

type GetCountryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *Country `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetCountryResponseData) Reset() {
	*x = GetCountryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCountryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCountryResponseData) ProtoMessage() {}

func (x *GetCountryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCountryResponseData.ProtoReflect.Descriptor instead.
func (*GetCountryResponseData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{3, 0}
}

func (x *GetCountryResponseData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetCountryResponseData) GetData() *Country {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetsCountryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      int64      `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	TotalData   int64      `protobuf:"varint,2,opt,name=totalData,proto3" json:"totalData,omitempty"`
	TotalPage   int64      `protobuf:"varint,3,opt,name=totalPage,proto3" json:"totalPage,omitempty"`
	CurrentPage int64      `protobuf:"varint,4,opt,name=currentPage,proto3" json:"currentPage,omitempty"`
	Data        []*Country `protobuf:"bytes,5,rep,name=data,proto3" json:"data,omitempty"`
}

func (x *GetsCountryResponseData) Reset() {
	*x = GetsCountryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetsCountryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetsCountryResponseData) ProtoMessage() {}

func (x *GetsCountryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetsCountryResponseData.ProtoReflect.Descriptor instead.
func (*GetsCountryResponseData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{5, 0}
}

func (x *GetsCountryResponseData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetsCountryResponseData) GetTotalData() int64 {
	if x != nil {
		return x.TotalData
	}
	return 0
}

func (x *GetsCountryResponseData) GetTotalPage() int64 {
	if x != nil {
		return x.TotalPage
	}
	return 0
}

func (x *GetsCountryResponseData) GetCurrentPage() int64 {
	if x != nil {
		return x.CurrentPage
	}
	return 0
}

func (x *GetsCountryResponseData) GetData() []*Country {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateCountryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *Country `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateCountryResponseData) Reset() {
	*x = CreateCountryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateCountryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCountryResponseData) ProtoMessage() {}

func (x *CreateCountryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCountryResponseData.ProtoReflect.Descriptor instead.
func (*CreateCountryResponseData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CreateCountryResponseData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *CreateCountryResponseData) GetData() *Country {
	if x != nil {
		return x.Data
	}
	return nil
}

type UpdateCountryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64    `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Data   *Country `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *UpdateCountryResponseData) Reset() {
	*x = UpdateCountryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateCountryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateCountryResponseData) ProtoMessage() {}

func (x *UpdateCountryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateCountryResponseData.ProtoReflect.Descriptor instead.
func (*UpdateCountryResponseData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{9, 0}
}

func (x *UpdateCountryResponseData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateCountryResponseData) GetData() *Country {
	if x != nil {
		return x.Data
	}
	return nil
}

type DeleteCountryRequestData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *DeleteCountryRequestData) Reset() {
	*x = DeleteCountryRequestData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCountryRequestData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCountryRequestData) ProtoMessage() {}

func (x *DeleteCountryRequestData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCountryRequestData.ProtoReflect.Descriptor instead.
func (*DeleteCountryRequestData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{10, 0}
}

func (x *DeleteCountryRequestData) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteCountryResponseData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status int64  `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	Error  string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *DeleteCountryResponseData) Reset() {
	*x = DeleteCountryResponseData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_pb_country_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCountryResponseData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCountryResponseData) ProtoMessage() {}

func (x *DeleteCountryResponseData) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_pb_country_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCountryResponseData.ProtoReflect.Descriptor instead.
func (*DeleteCountryResponseData) Descriptor() ([]byte, []int) {
	return file_pkg_pb_country_proto_rawDescGZIP(), []int{11, 0}
}

func (x *DeleteCountryResponseData) GetStatus() int64 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *DeleteCountryResponseData) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_pkg_pb_country_proto protoreflect.FileDescriptor

var file_pkg_pb_country_proto_rawDesc = []byte{
	0x0a, 0x14, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x2f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x22, 0xd5,
	0x03, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16,
	0x0a, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x33,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x12, 0x20,
	0x0a, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x49, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x32, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x49, 0x73, 0x6f, 0x33, 0x31, 0x36, 0x36, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x53, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x75, 0x62, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x53, 0x75, 0x62, 0x52, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x49, 0x6e, 0x74, 0x65,
	0x72, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6d,
	0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x52, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0xd3, 0x02, 0x0a, 0x0d, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65,
	0x12, 0x31, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x05, 0x71, 0x75,
	0x65, 0x72, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x2e, 0x53, 0x6f, 0x72, 0x74, 0x52, 0x04, 0x73,
	0x6f, 0x72, 0x74, 0x1a, 0x5b, 0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6c, 0x70, 0x68,
	0x61, 0x33, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x33,
	0x1a, 0x5a, 0x0a, 0x04, 0x53, 0x6f, 0x72, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x41, 0x6c, 0x70, 0x68, 0x61, 0x32, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6c,
	0x70, 0x68, 0x61, 0x32, 0x12, 0x16, 0x0a, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x41, 0x6c, 0x70, 0x68, 0x61, 0x33, 0x22, 0x86, 0x01, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0a, 0x47, 0x45, 0x54, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x1a, 0x30, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x22, 0x9b, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x0b,
	0x47, 0x45, 0x54, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x0a, 0x47, 0x45, 0x54, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x1a, 0x43,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23,
	0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74,
	0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x47, 0x45, 0x54,
	0x53, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x0b, 0x47, 0x45, 0x54, 0x53, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x22, 0xfe, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x43, 0x0a, 0x0c, 0x47,
	0x45, 0x54, 0x53, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x0b, 0x47, 0x45, 0x54, 0x53, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x1a, 0xa1, 0x01, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x50, 0x61, 0x67, 0x65, 0x12,
	0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0x4e, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0e,
	0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x22, 0xa7, 0x01, 0x0a, 0x15, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49,
	0x0a, 0x0e, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x43, 0x52, 0x45, 0x41,
	0x54, 0x45, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x1a, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c,
	0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x4e,
	0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x36, 0x0a, 0x0e, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45,
	0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f,
	0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0d, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x22, 0xa7,
	0x01, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x1a, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x78, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x48, 0x0a, 0x0e, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x1a, 0x16, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x98, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0e,
	0x44, 0x45, 0x4c, 0x45, 0x54, 0x45, 0x5f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x52, 0x0d, 0x44, 0x45, 0x4c, 0x45, 0x54, 0x45,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x1a, 0x34, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x32, 0x91, 0x03,
	0x0a, 0x0e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x12, 0x48, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x1a, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x74, 0x72,
	0x61, 0x76, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74, 0x73, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x45, 0x0a, 0x0a, 0x47, 0x65,
	0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65,
	0x6c, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x4e, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x1c, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x1d, 0x2e, 0x74, 0x72, 0x61, 0x76, 0x65, 0x6c, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_pb_country_proto_rawDescOnce sync.Once
	file_pkg_pb_country_proto_rawDescData = file_pkg_pb_country_proto_rawDesc
)

func file_pkg_pb_country_proto_rawDescGZIP() []byte {
	file_pkg_pb_country_proto_rawDescOnce.Do(func() {
		file_pkg_pb_country_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_pb_country_proto_rawDescData)
	})
	return file_pkg_pb_country_proto_rawDescData
}

var file_pkg_pb_country_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_pkg_pb_country_proto_goTypes = []interface{}{
	(*Country)(nil),                   // 0: travel.Country
	(*CountryHeader)(nil),             // 1: travel.CountryHeader
	(*GetCountryRequest)(nil),         // 2: travel.GetCountryRequest
	(*GetCountryResponse)(nil),        // 3: travel.GetCountryResponse
	(*GetsCountryRequest)(nil),        // 4: travel.GetsCountryRequest
	(*GetsCountryResponse)(nil),       // 5: travel.GetsCountryResponse
	(*CreateCountryRequest)(nil),      // 6: travel.CreateCountryRequest
	(*CreateCountryResponse)(nil),     // 7: travel.CreateCountryResponse
	(*UpdateCountryRequest)(nil),      // 8: travel.UpdateCountryRequest
	(*UpdateCountryResponse)(nil),     // 9: travel.UpdateCountryResponse
	(*DeleteCountryRequest)(nil),      // 10: travel.DeleteCountryRequest
	(*DeleteCountryResponse)(nil),     // 11: travel.DeleteCountryResponse
	(*CountryHeader_Query)(nil),       // 12: travel.CountryHeader.Query
	(*CountryHeader_Sort)(nil),        // 13: travel.CountryHeader.Sort
	(*GetCountryRequestData)(nil),     // 14: travel.GetCountryRequest.data
	(*GetCountryResponseData)(nil),    // 15: travel.GetCountryResponse.data
	(*GetsCountryResponseData)(nil),   // 16: travel.GetsCountryResponse.data
	(*CreateCountryResponseData)(nil), // 17: travel.CreateCountryResponse.data
	(*UpdateCountryResponseData)(nil), // 18: travel.UpdateCountryResponse.data
	(*DeleteCountryRequestData)(nil),  // 19: travel.DeleteCountryRequest.data
	(*DeleteCountryResponseData)(nil), // 20: travel.DeleteCountryResponse.data
}
var file_pkg_pb_country_proto_depIdxs = []int32{
	12, // 0: travel.CountryHeader.query:type_name -> travel.CountryHeader.Query
	13, // 1: travel.CountryHeader.sort:type_name -> travel.CountryHeader.Sort
	14, // 2: travel.GetCountryRequest.GET_COUNTRY:type_name -> travel.GetCountryRequest.data
	15, // 3: travel.GetCountryResponse.GET_COUNTRY:type_name -> travel.GetCountryResponse.data
	1,  // 4: travel.GetsCountryRequest.GETS_COUNTRY:type_name -> travel.CountryHeader
	16, // 5: travel.GetsCountryResponse.GETS_COUNTRY:type_name -> travel.GetsCountryResponse.data
	0,  // 6: travel.CreateCountryRequest.CREATE_COUNTRY:type_name -> travel.Country
	17, // 7: travel.CreateCountryResponse.CREATE_COUNTRY:type_name -> travel.CreateCountryResponse.data
	0,  // 8: travel.UpdateCountryRequest.UPDATE_COUNTRY:type_name -> travel.Country
	18, // 9: travel.UpdateCountryResponse.UPDATE_COUNTRY:type_name -> travel.UpdateCountryResponse.data
	19, // 10: travel.DeleteCountryRequest.DELETE_COUNTRY:type_name -> travel.DeleteCountryRequest.data
	20, // 11: travel.DeleteCountryResponse.DELETE_COUNTRY:type_name -> travel.DeleteCountryResponse.data
	0,  // 12: travel.GetCountryResponse.data.data:type_name -> travel.Country
	0,  // 13: travel.GetsCountryResponse.data.data:type_name -> travel.Country
	0,  // 14: travel.CreateCountryResponse.data.data:type_name -> travel.Country
	0,  // 15: travel.UpdateCountryResponse.data.data:type_name -> travel.Country
	4,  // 16: travel.CountryService.GetsCountry:input_type -> travel.GetsCountryRequest
	2,  // 17: travel.CountryService.GetCountry:input_type -> travel.GetCountryRequest
	6,  // 18: travel.CountryService.CreateCountry:input_type -> travel.CreateCountryRequest
	8,  // 19: travel.CountryService.UpdateCountry:input_type -> travel.UpdateCountryRequest
	10, // 20: travel.CountryService.DeleteCountry:input_type -> travel.DeleteCountryRequest
	5,  // 21: travel.CountryService.GetsCountry:output_type -> travel.GetsCountryResponse
	3,  // 22: travel.CountryService.GetCountry:output_type -> travel.GetCountryResponse
	7,  // 23: travel.CountryService.CreateCountry:output_type -> travel.CreateCountryResponse
	9,  // 24: travel.CountryService.UpdateCountry:output_type -> travel.UpdateCountryResponse
	11, // 25: travel.CountryService.DeleteCountry:output_type -> travel.DeleteCountryResponse
	21, // [21:26] is the sub-list for method output_type
	16, // [16:21] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_pkg_pb_country_proto_init() }
func file_pkg_pb_country_proto_init() {
	if File_pkg_pb_country_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_pb_country_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryHeader); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCountryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCountryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCountryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCountryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCountryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCountryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCountryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCountryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryHeader_Query); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CountryHeader_Sort); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCountryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetsCountryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateCountryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateCountryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCountryRequestData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_pb_country_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCountryResponseData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_pb_country_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_pb_country_proto_goTypes,
		DependencyIndexes: file_pkg_pb_country_proto_depIdxs,
		MessageInfos:      file_pkg_pb_country_proto_msgTypes,
	}.Build()
	File_pkg_pb_country_proto = out.File
	file_pkg_pb_country_proto_rawDesc = nil
	file_pkg_pb_country_proto_goTypes = nil
	file_pkg_pb_country_proto_depIdxs = nil
}
